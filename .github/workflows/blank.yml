# This is a powerful CI workflow to automate the build, test, and deployment process

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up Node.js (or any environment your project needs)
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'  # Specify the version of Node.js to use

      # Install dependencies
      - name: Install dependencies
        run: npm install

      # Run your tests
      - name: Run tests
        run: npm test

      # Build your project
      - name: Build project
        run: npm run build

      # Deploy the project (Example: Deploy to GitHub Pages)
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public  # Adjust this to your build output directory

      # Log a success message
      - name: Log success message
        run: echo "ðŸš€ Deployment successful! Your project is live."

      # Run a multi-line script for additional commands or tasks
      - name: Run additional commands
        run: |
          echo "Add other actions to build, test, and deploy your project."
          echo "You can integrate notifications, linting, or security checks here!"
